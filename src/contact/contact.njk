---
title: Contact me for your next project
layout: layouts/layout.njk
tags: ['sitemap']
---

<main aria-labelledby="content-heading" role="main" id="content">
  <div class="content__layout">
    <h1 id="content-heading">{{ title }}</h1>

    <blockquote class="content__lead-paragraph">
      <p>
        Continuum Design looks forward to hearing from you. Please fill out the
        form below. All fields are required except a phone number.
      </p>
      <noscript>
        <p>I apologize for the inconvenience, but Javascript is required to complete this contact form.</p>
      </noscript>
    </blockquote>

    <form
      action="thankyou"
      class="contact-form"
      data-netlify="true"
      id="continuum-contact-form"
      {# method="post" #}
      name="continuum-contact"
      netlify-honeypot="botz"
      novalidate
    >
      <fieldset class="contact-form__fieldset">
        <legend class="contact-form__legend">
          <h2>Your information</h2>
        </legend>
        <div class="contact-form__alert" role="alert" tabindex="-1"></div>
        <ul class="utils__list--no-bullets contact-form__list" role="list">
          <li class="contact-form__list-item">
            <label for="name" class="contact-form__label"><span aria-hidden="true" class="contact-form--flourish">&#x2916;&nbsp;</span>Your name</label>
            <p aria-live="assertive" class="contact-form__error-msg" id="error-msg-name">A name of two or more letters is required</p>
            <input
              autocomplete="name"
              class="js-validate"
              id="name"
              maxlength="40"
              minlength="2"
              name="name"
              pattern="[A-Za-z0-9' -.]{2,40}"
              type="text"
              required
            />
          </li>
          <li class="contact-form__list-item">
            <label for="email" class="contact-form__label"
              ><span aria-hidden="true" class="contact-form--flourish">&#x2916;&nbsp;</span>Email address</label
            >
            <p aria-live="assertive" class="contact-form__error-msg" id="error-msg-email">A valid email address is required</p>
            <input
              autocomplete="email"
              class="js-validate"
              id="email"
              maxlength="100"
              name="email"
              type="email"
              required
            />
          </li>
          <li class="contact-form__list-item">
            <label for="telephone" class="contact-form__label"
              ><span aria-hidden="true" class="contact-form--flourish">&#x2916;&nbsp;</span>Telephone number <em>(optional)</em></label
            >
             <p aria-live="assertive" class="contact-form__error-msg" id="error-msg-telephone">Enter a valid telephone number</p>
            <input
              autocomplete="tel"
              class="js-validate"
              id="telephone"
              maxlength="20"
              name="telephone"
              pattern="^[(]{0,1}[0-9]{3}[)]{0,1}[-.\s]?[0-9]{3}[-.\s]?[0-9]{4}$"
              placeholder="(123) 456-7890"
              type="tel"
            />
          </li>
          <li class="contact-form__list-item">
            <label for="message" class="contact-form__label"><span aria-hidden="true" class="contact-form--flourish">&#x2916;&nbsp;</span>Tell me about your project</label>
            <p aria-live="assertive" class="contact-form__error-msg" id="error-msg-message">A short message is required</p>
            <textarea
              class="js-validate"
              id="message"
              maxlength="500"
              minlength="5"
              required
            ></textarea>
          </li>
          <li class="contact-form__list-item utils__visibility--none">
            <label for="botz" class="contact-form__label">Leave this field blank if you are a human</label>
            <input type="text" id="botz" name="botz" />
          </li>
          <li class="contact-form__list-item">
            <label for="consented" class="contact-form__label contact-form__label--checkbox">
              <input class="js-validate" type="checkbox" id="consented" name="consent" required />
              <span>I consent to being contacted</span>
            </label>
            <p aria-live="assertive" class="contact-form__error-msg" id="error-msg-consented">You must check the consent box before submitting</p>
          </li>
          <li class="contact-form__list-item">
            <input class="contact-form__submit" type="submit" value="Send message" />
          </li>
        </ul>
      </fieldset>
    </form>
  </div>

  <script type="text/javascript">
    const contactForm = document.getElementById('continuum-contact-form');
    const fields = [...document.querySelectorAll('.js-validate')];

    function validateFormOnSubmit(e) {
      console.log('Fired validateForm');
      const form = e.target;

      fields.forEach(field => {
        if (field.checkValidity()) {
          field.closest('li').classList.remove('js-invalid');
          field.removeAttribute('aria-invalid');
          field.removeAttribute('aria-describedby');
        } else {
          const fieldId = field.getAttribute('id');
          field.closest('li').classList.add('js-invalid');
          field.setAttribute('aria-invalid', 'true');
          field.setAttribute('aria-describedby', `error-msg-${fieldId}`);
        }
      });

      if (!form.checkValidity()) {
        console.log('Form not submitted. Has errors.');
        e.preventDefault();
        e.stopImmediatePropagation();
        alertOnSubmitError('.contact-form__alert');
      }
    }

    function clearErrorState(field) {
      const parent = field.closest('li');
      if (!parent.classList.contains('js-invalid')) return;

      parent.classList.remove('js-invalid');
      field.removeAttribute('aria-invalid');
      field.removeAttribute('aria-describedby');
    }

    function alertOnSubmitError(target) {
      const invalidInputs = document.querySelectorAll(':scope .contact-form__fieldset :invalid');
      const alertBox = document.querySelector(target);
      const alertTextBlock = document.createElement('p')
      const alertTextMsg = `Your form has ${invalidInputs.length} errors. Please update and press Send message.`;

      while (alertBox.firstChild) {
        alertBox.removeChild(alertBox.firstChild);
      }

      alertTextBlock.append(alertTextMsg);
      alertBox.append(alertTextBlock);
      alertBox.focus();
      {# alertBox.scrollIntoView(); #}
    }

    contactForm.addEventListener('submit', validateFormOnSubmit);
    fields.forEach(field => {
      field.addEventListener('blur', e => clearErrorState(e.target));
    });
  </script>
</main>
